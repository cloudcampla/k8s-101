apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Authentication App</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                max-width: 400px;
                margin: 50px auto;
                padding: 20px;
                background-color: #f5f5f5;
            }
            .container {
                background: white;
                padding: 30px;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            .form-group {
                margin-bottom: 15px;
            }
            label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }
            input {
                width: 100%;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                box-sizing: border-box;
            }
            button {
                width: 100%;
                padding: 12px;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-size: 16px;
            }
            button:hover {
                background-color: #0056b3;
            }
            .toggle-link {
                text-align: center;
                margin-top: 15px;
                color: #007bff;
                cursor: pointer;
            }
            .hidden {
                display: none;
            }
            .user-info {
                text-align: center;
                padding: 20px;
            }
            .logout-btn {
                background-color: #dc3545;
                margin-top: 10px;
            }
            .logout-btn:hover {
                background-color: #c82333;
            }
            .error {
                color: #dc3545;
                margin-top: 10px;
                text-align: center;
            }
            .success {
                color: #28a745;
                margin-top: 10px;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div id="loginForm">
                <h2>Login</h2>
                <form id="login">
                    <div class="form-group">
                        <label for="loginEmail">Email:</label>
                        <input type="email" id="loginEmail" required>
                    </div>
                    <div class="form-group">
                        <label for="loginPassword">Password:</label>
                        <input type="password" id="loginPassword" required>
                    </div>
                    <button type="submit">Login</button>
                </form>
                <div class="toggle-link" onclick="toggleForms()">
                    Don't have an account? Register here
                </div>
                <div id="loginMessage"></div>
            </div>

            <div id="registerForm" class="hidden">
                <h2>Register</h2>
                <form id="register">
                    <div class="form-group">
                        <label for="registerUsername">Username:</label>
                        <input type="text" id="registerUsername" required>
                    </div>
                    <div class="form-group">
                        <label for="registerEmail">Email:</label>
                        <input type="email" id="registerEmail" required>
                    </div>
                    <div class="form-group">
                        <label for="registerPassword">Password:</label>
                        <input type="password" id="registerPassword" required>
                    </div>
                    <button type="submit">Register</button>
                </form>
                <div class="toggle-link" onclick="toggleForms()">
                    Already have an account? Login here
                </div>
                <div id="registerMessage"></div>
            </div>

            <div id="userDashboard" class="hidden">
                <div class="user-info">
                    <h2>Welcome!</h2>
                    <div id="userDetails"></div>
                    <button class="logout-btn" onclick="logout()">Logout</button>
                </div>
            </div>
        </div>

        <script>
            const API_BASE_URL = 'http://localhost:30001/api';

            document.addEventListener('DOMContentLoaded', function() {
                const token = localStorage.getItem('token');
                if (token) {
                    fetchUserProfile();
                }
            });

            function toggleForms() {
                const loginForm = document.getElementById('loginForm');
                const registerForm = document.getElementById('registerForm');
                
                loginForm.classList.toggle('hidden');
                registerForm.classList.toggle('hidden');
                
                document.getElementById('loginMessage').innerHTML = '';
                document.getElementById('registerMessage').innerHTML = '';
            }

            document.getElementById('login').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const email = document.getElementById('loginEmail').value;
                const password = document.getElementById('loginPassword').value;
                
                try {
                    const response = await fetch(`${API_BASE_URL}/auth/login`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ email, password })
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok) {
                        localStorage.setItem('token', data.token);
                        showUserDashboard(data.user);
                        showMessage('loginMessage', 'Login successful!', 'success');
                    } else {
                        showMessage('loginMessage', data.message || 'Login failed', 'error');
                    }
                } catch (error) {
                    showMessage('loginMessage', 'Network error. Please try again.', 'error');
                }
            });

            document.getElementById('register').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const username = document.getElementById('registerUsername').value;
                const email = document.getElementById('registerEmail').value;
                const password = document.getElementById('registerPassword').value;
                
                try {
                    const response = await fetch(`${API_BASE_URL}/auth/register`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, email, password })
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok) {
                        localStorage.setItem('token', data.token);
                        showUserDashboard(data.user);
                        showMessage('registerMessage', 'Registration successful!', 'success');
                    } else {
                        const errorMsg = data.errors ? 
                            data.errors.map(err => err.msg).join(', ') : 
                            data.message || 'Registration failed';
                        showMessage('registerMessage', errorMsg, 'error');
                    }
                } catch (error) {
                    showMessage('registerMessage', 'Network error. Please try again.', 'error');
                }
            });

            async function fetchUserProfile() {
                const token = localStorage.getItem('token');
                
                try {
                    const response = await fetch(`${API_BASE_URL}/auth/me`, {
                        headers: {
                            'Authorization': `Bearer ${token}`
                        }
                    });
                    
                    if (response.ok) {
                        const user = await response.json();
                        showUserDashboard(user);
                    } else {
                        localStorage.removeItem('token');
                        showLoginForm();
                    }
                } catch (error) {
                    localStorage.removeItem('token');
                    showLoginForm();
                }
            }

            function showUserDashboard(user) {
                document.getElementById('loginForm').classList.add('hidden');
                document.getElementById('registerForm').classList.add('hidden');
                document.getElementById('userDashboard').classList.remove('hidden');
                
                document.getElementById('userDetails').innerHTML = `
                    <p><strong>Username:</strong> ${user.username}</p>
                    <p><strong>Email:</strong> ${user.email}</p>
                    <p><strong>Role:</strong> ${user.role}</p>
                    <p><strong>Member since:</strong> ${new Date(user.createdAt).toLocaleDateString()}</p>
                `;
            }

            function showLoginForm() {
                document.getElementById('loginForm').classList.remove('hidden');
                document.getElementById('registerForm').classList.add('hidden');
                document.getElementById('userDashboard').classList.add('hidden');
            }

            function logout() {
                localStorage.removeItem('token');
                showLoginForm();
                
                document.getElementById('login').reset();
                document.getElementById('register').reset();
                document.getElementById('loginMessage').innerHTML = '';
                document.getElementById('registerMessage').innerHTML = '';
            }

            function showMessage(elementId, message, type) {
                const element = document.getElementById(elementId);
                element.innerHTML = `<div class="${type}">${message}</div>`;
                
                setTimeout(() => {
                    element.innerHTML = '';
                }, 5000);
            }
        </script>
    </body>
    </html>